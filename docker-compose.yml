services:
  db:
    container_name: db
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 20030505
      PGDATA: /data/postgres
      POSTGRES_DB: postdb
    volumes:
      - db:/data/postgres
    ports:
      - "5332:5332"
    networks:
      - db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_postdb -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5

  user_service:
    container_name: user_service
    build: ./user_service
    depends_on:
#      - "mongodb"
      - "db"
      - "post_service"
    ports:
      - "9000:9000"
    networks:
      - db

  post_service:
    container_name: post_service
    build: ./post_service
    depends_on:
#      - "mongodb"
      - "db"
      - "comment_service"
    ports:
      - "9009:9009"
    networks:
      - db
  comment_service:
    container_name: comment_service
    build: ./comment_service
    depends_on:
#      - "mongodb"
      - "db"
    ports:
      - "9008:9008"
    networks:
      - db

  redisdb:
    container_name: redisdb
    image:  redis
    ports:
      - "6378:6378"
    networks:
      - db

  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    depends_on:
      -  "redisdb"
      -  "user_service"
    ports:
      - "9091:9091"
    networks:
      - db

  migrate:
    image: migrate/migrate
    networks:
      - db
    volumes:
      - ./migrations:/migrations
    command: -path /migrations -database postgres://postgres:20030505@db:5432/v1?sslmode=disable -verbose up
    links:
      - db
    depends_on:
      - db

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - db
    restart: unless-stopped

#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "22181:2181"
#    networks:
#      - db
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - "zookeeper"
#    ports:
#      - "29092:29092"
#    networks:
#      - db
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      # KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://0.0.0.0:29092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


networks:
  db:
    driver: bridge

volumes:
  db:
  mongodb_data:
    driver: local

