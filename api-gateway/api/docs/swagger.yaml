definitions:
  commentModel.Comment:
    properties:
      comment_id:
        type: string
      content:
        type: string
      likes:
        type: integer
      post_id:
        type: string
      user_id:
        type: string
    type: object
  commentModel.Comments:
    properties:
      comments:
        items:
          $ref: '#/definitions/commentModel.Comment'
        type: array
    type: object
  commentModel.CreateReq:
    properties:
      content:
        type: string
      post_id:
        type: string
    type: object
  commentModel.Status:
    properties:
      status:
        type: boolean
    type: object
  commentModel.UpdateComment:
    properties:
      comment_id:
        type: string
      new_content:
        type: string
    type: object
  models.AddRole:
    properties:
      method:
        type: string
      role:
        type: string
      url:
        type: string
    type: object
  models.AdminUser:
    properties:
      bio:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      posts:
        items:
          $ref: '#/definitions/postModel.Post'
        type: array
      role:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
      website:
        type: string
    type: object
  models.AdminUsersRes:
    properties:
      users:
        items:
          $ref: '#/definitions/models.AdminUser'
        type: array
    type: object
  models.AllUsers:
    properties:
      email:
        type: string
      last_name:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  models.Authorization:
    properties:
      status:
        type: boolean
      token:
        type: string
    type: object
  models.AuthorizationReq:
    properties:
      code:
        type: integer
      email:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.RegisterModelReq:
    properties:
      bio:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      user_name:
        type: string
      website:
        type: string
    type: object
  models.RegisterModelRes:
    properties:
      status:
        type: boolean
    type: object
  models.RegisterRes:
    properties:
      status:
        type: string
      token:
        type: string
    type: object
  models.StandardErrorModel:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.UpdateRolReq:
    properties:
      id:
        type: string
      role:
        type: string
    type: object
  models.UpdateRolRes:
    properties:
      status:
        type: boolean
    type: object
  models.UpdateUser:
    properties:
      bio:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      user_name:
        type: string
      website:
        type: string
    type: object
  models.UpdateUserRes:
    properties:
      bio:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      token:
        type: string
      user_name:
        type: string
      website:
        type: string
    type: object
  models.User:
    properties:
      bio:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      posts:
        items:
          $ref: '#/definitions/postModel.Post'
        type: array
      role:
        type: string
      user_name:
        type: string
      website:
        type: string
    type: object
  models.UsersRes:
    properties:
      users:
        items:
          $ref: '#/definitions/models.AllUsers'
        type: array
    type: object
  postModel.CreateReq:
    properties:
      category:
        type: string
      content:
        type: string
      title:
        type: string
    type: object
  postModel.Post:
    properties:
      category:
        type: string
      comments:
        items:
          $ref: '#/definitions/commentModel.Comment'
        type: array
      content:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      dislikes:
        type: integer
      id:
        type: string
      likes:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      views:
        type: integer
    type: object
  postModel.Posts:
    properties:
      posts:
        items:
          $ref: '#/definitions/postModel.Post'
        type: array
    type: object
  postModel.SearchReq:
    properties:
      field:
        type: string
      limit:
        type: integer
      page:
        type: integer
      value:
        type: string
    type: object
  postModel.Status:
    properties:
      '''status''':
        type: boolean
    type: object
  postModel.UpdatePostReq:
    properties:
      category:
        type: string
      content:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
host: localhost:9091
info:
  contact: {}
  title: welcome to
  version: "1.0"
paths:
  /v1/auth/Login/:
    post:
      consumes:
      - application/json
      description: Login - Api for registering users
      parameters:
      - description: Login Req
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/models.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: Login
      tags:
      - Register
  /v1/auth/authorization/:
    post:
      consumes:
      - application/json
      description: Authorization - Api for registering users
      parameters:
      - description: RegisterModelReq
        in: body
        name: Register
        required: true
        schema:
          $ref: '#/definitions/models.AuthorizationReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Authorization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: Authorization
      tags:
      - Register
  /v1/auth/register/:
    post:
      consumes:
      - application/json
      description: Register - Api for registering users
      parameters:
      - description: RegisterModelReq
        in: body
        name: Register
        required: true
        schema:
          $ref: '#/definitions/models.RegisterModelReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterModelRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: Register
      tags:
      - Register
  /v1/suAdmin/{role}:
    delete:
      consumes:
      - application/json
      description: Delete user-role by id
      parameters:
      - description: role
        in: path
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete user-role by id
      tags:
      - Super Admin
  /v1/suAdmin/add-user-role:
    post:
      consumes:
      - application/json
      description: Create new user-role
      parameters:
      - description: create
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/models.AddRole'
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Create new user-role
      tags:
      - Super Admin
  /v1/suAdmin/delete_user:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: DeleteUser
      tags:
      - suAdmin
  /v1/suAdmin/get_all_users:
    get:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Items per page
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AdminUsersRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: AdGetAllUsers
      tags:
      - suAdmin
  /v1/suAdmin/roles:
    get:
      consumes:
      - application/json
      description: Get list of roles
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get list of roles
      tags:
      - Super Admin
  /v1/suAdmin/up_role:
    put:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: Update role
        in: body
        name: UpdateRole
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRolReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateRolRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: Update Role user
      tags:
      - suAdmin
  /v1/user/comment/click_like:
    post:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: comment_id
        in: query
        name: comment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commentModel.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: CommentClickLike
      tags:
      - comment
  /v1/user/comment/create:
    post:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: create comment
        in: body
        name: CreateComment
        required: true
        schema:
          $ref: '#/definitions/commentModel.CreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commentModel.Comment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: CreateComment
      tags:
      - comment
  /v1/user/comment/delete:
    delete:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: comment_id
        in: query
        name: comment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commentModel.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: DeleteComment
      tags:
      - comment
  /v1/user/comment/get_comm_by_owner_id:
    get:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: post_id
        in: query
        name: post_id
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commentModel.Comments'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetCommentsByOwnerId
      tags:
      - comment
  /v1/user/comment/get_comm_by_post_id:
    get:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: post_id
        in: query
        name: post_id
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commentModel.Comments'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetCommentsByPostId
      tags:
      - comment
  /v1/user/comment/update:
    put:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: update comment
        in: body
        name: UpdateComment
        required: true
        schema:
          $ref: '#/definitions/commentModel.UpdateComment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commentModel.Comment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: UpdateComment
      tags:
      - comment
  /v1/user/get_all_users:
    get:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Items per page
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UsersRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetAllUsers
      tags:
      - user
  /v1/user/get_user:
    get:
      consumes:
      - application/json
      description: Viewing a single User by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetUser
      tags:
      - user
  /v1/user/get_user_posts:
    get:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Items per page
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetUserWithPosts
      tags:
      - user
  /v1/user/post/click_dislike:
    post:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: post_id
        in: query
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postModel.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: ClickDisLike
      tags:
      - post
  /v1/user/post/click_like:
    post:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: post_id
        in: query
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postModel.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: ClickLike
      tags:
      - post
  /v1/user/post/create:
    post:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: create post
        in: body
        name: CreatePost
        required: true
        schema:
          $ref: '#/definitions/postModel.CreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postModel.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: CreatePost
      tags:
      - post
  /v1/user/post/delete_post:
    delete:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: post_id
        in: query
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postModel.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: DeletePost
      tags:
      - post
  /v1/user/post/get_by_owner_id:
    get:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Items per page
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postModel.Posts'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetPostByOwnerId
      tags:
      - post
  /v1/user/post/get_post:
    get:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: post_id
        in: query
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postModel.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetPost
      tags:
      - post
  /v1/user/post/get_with_comment:
    get:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: post_id
        in: query
        name: post_id
        required: true
        type: string
      - description: page_comment
        in: query
        name: page_comment
        required: true
        type: string
      - description: limit_comment
        in: query
        name: limit_comment
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postModel.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetPostWithComment
      tags:
      - post
  /v1/user/post/search_post:
    post:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: search post
        in: body
        name: SearchPost
        required: true
        schema:
          $ref: '#/definitions/postModel.SearchReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postModel.SearchReq'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: SearchPost
      tags:
      - post
  /v1/user/post/update_post:
    put:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: update post
        in: body
        name: UpdatePost
        required: true
        schema:
          $ref: '#/definitions/postModel.UpdatePostReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/postModel.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: UpdatePost
      tags:
      - post
  /v1/user/up_user:
    put:
      consumes:
      - application/json
      description: Viewing a single User by id
      parameters:
      - description: Up User
        in: body
        name: UpUser
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateUserRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: UpdateUser
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
